= render partial: '/ontologies/menu', locals: {resource: resource}

%h1#ontology_title
  = ontology_link_to resource
  %small
    - if resource.logic
      = link_to resource.logic.to_s, resource.logic
  = resource.acronym
  - if resource.file_deleted?
    %small
      %span.label.label-warning= t 'ontology.deleted.label'

- if resource.ontology_type
  %small
    %p
      #{Settings.OMS} Type:
      = fancy_link resource.ontology_type

%small
  - if resource.parent
    %p
      This #{Settings.OMS} is a child of
      %span= fancy_link(resource.parent)
  %p
    - if resource.has_file?
      #{Settings.OMS} defined in the file
      = fancy_link repository_tree_path(resource.repository, resource.path)
    - else
      = t 'ontology.deleted.info', path: resource.path, oms: Settings.OMS
      = raw "#{link_to t('ontology.deleted.last_file_version'), last_file_path(resource)}."
  - if resource.documentation
    See for detailed documentation
    = link_to resource.documentation, resource.documentation


%p
  %span.iri-link= link_to resource.iri, resource.iri
%p= resource.description

- if resource.oops_supported?
  = render partial: '/ontologies/oops_state', locals: {resource: resource}

- if resource.non_current_active_version?(current_user)
  = render partial: '/ontologies/status'

%nav.nav_tab_level1
  %ul.nav.nav-tabs
    - @top_level_pages.each do |(page_title, page)|
      %li{class: page==current_page || in_subcontroller?(page, current_page) ? 'active' : nil}
        = link_to page_title, [*resource_chain, page]
  - if %w(symbols sentences theorems children).include?(controller_name)
    %nav.nav_tab_level2
      %ul.nav.nav-tabs
        - @symbols.each do |symbol|
          %li{:class => (symbol.kind == @active_kind ? 'active' : nil)}
            = link_to repository_ontology_symbols_path(*resource_chain, kind: symbol.kind) do
              = symbol.count == 1 ? symbol.kind : symbol.kind.pluralize
              %span.badge{:style => symbol.count == 0 && 'display:none'}= symbol.count
        - pages.each do |page, path, count|
          %li{:class => (page==current_page ? 'active' : nil)}
            = link_to path do
              = page.to_s.capitalize
              - if count # hide counter if empty
                %span.badge{:style => count==0 && 'display:none'}= count
  - if in_metadata?
    %nav.nav_tab_level2
      %ul.nav.nav-tabs
        - @metadatas.each do |(page_title, page)|
          %li{class: page[-1]==current_page ? 'active' : nil}
            = link_to page_title, page
